# Generate
;generateConfig.workflows                        = false
;generateConfig.agents                           = false
;generateConfig.jobTemplates                     = false
;generateConfig.schedules                        = false
;generateConfig.calendars                        = false
;generateConfig.locks                            = false
;generateConfig.cyclicOrders                     = true

# JobScheduler 1.x
;js1.jobStream.generateJobFileIfNotExists        = true

# Parser
parserConfig.excludedDirectoryNames             = .sos-templates;.svn;.configuration
parserConfig.excludedDirectoryPaths             = sos/

# Workflow
;workflowConfig.defaultTimeZone                  = Etc/UTC

# Workflow Job
;jobConfig.jitl.logLevel                         = INFO
;jobConfig.forcedGraceTimeout                    = 15
;jobConfig.forcedParallelism                     = 1
;jobConfig.forcedFailOnErrWritten                = false
jobConfig.forcedV1Compatible                    = true

# Agent
;agentConfig.forcedControllerId                  = js7  
;agentConfig.defaultControllerId                 = js7
;agentConfig.forcedAgent                         = {"platform":"WINDOWS","standaloneAgent":{"agentName":"primaryAgent","url":"http://localhost:4445"}} 
;agentConfig.forcedAgent                         = examples/agent_standalone.json  
;agentConfig.defaultAgent                        = examples/cluster_agent.json
;agentConfig.mappings                            = js1_agent1=examples/agent_standalone.json; \
                                                   js1_agent2=examples/cluster_agent.json
                                                   
# Mock
;mockConfig.jitl.mockLevel                       = INFO
# INFO      Log arguments and always end successfully
# ERROR     Log arguments and fail if required parameters are missing
;mockConfig.shell.unixScript                     = $HOME/MockScript.sh
;mockConfig.shell.windowsScript                  = %UserProfile%\MockScript.cmd

# Schedule
;scheduleConfig.forcedWorkingDayCalendarName        = AnyDays
;scheduleConfig.forcedNonWorkingDayCalendarName     = AnyDays
;scheduleConfig.defaultWorkingDayCalendarName       = AnyDays
;scheduleConfig.defaultNonWorkingDayCalendarName    = AnyDays   
;scheduleConfig.defaultTimeZone                  = Etc/UTC
scheduleConfig.planOrders                       = true
scheduleConfig.submitOrders                     = true

# Calendar
;calendarConfig.forcedFolder                    = Calendars