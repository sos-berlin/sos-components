<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="js7_job_documentation_v1.1.xsl"?>
<description xmlns="http://www.sos-berlin.com/schema/js7_job_documentation_v1.1"
             xmlns:xi="http://www.w3.org/2001/XInclude"
             xmlns:xhtml="http://www.w3.org/1999/xhtml"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.sos-berlin.com/schema/js7_job_documentation_v1.1 http://www.sos-berlin.com/schema/js7_job_documentation_v1.1.xsd">
    <job name="CheckLogJob"
         title="Check task logs with regular expression "
         category="JITL">
        <script language="java"
                java_class="com.sos.jitl.jobs.checklog.CheckLogJob"
                resource="1"/>
    </job>
    <configuration>
        <params id="job_parameter">
             
            <param name="job"
                   required="true">
                <note>
                    <title>The job in the current workflow whose log is to be analysed</title>
                    <p>
                       When the job occurs more than one time in the workflow, the parameter "label" must be specified.
                    </p>
                    
                </note>
            </param>
            <param name="label"
                   required="When job is occurs more than one time">
                <note>
                    <title>The label of the job whose log is to be analysed</title>
                    <p>
                       When the job occurs more than one time in the workflow, the parameter "label" must be specified to unique identify the job whose log is to be analysed.
                    </p>
                </note>
            </param>
            <param name="pattern"
                   required="true">
                <note>
                    <title>The regular expression to be used to examine the log</title>
                    <p>
						The regular expression is applied to the log.
                    </p>
                    <p>
<b>Exampe 1: get lines with errors</b>
<ul>						
<li>pattern = ".*error.*"</li>
<li>log = "One line with error" + "\r\n" + "Line without the word" + "\r\n" + "And one line with error in the middle";</li>
</ul>
==> Result: 
<ul>
<li>js7CheckLogMatches: One line with error|And one line with error in the middle</li>
<li>js7CheckLogMatchedGroups:</li>
<li>js7CheckLogMatchCount: 2</li>
<li>js7CheckLogGroupCount: 0</li>
<li>js7CheckLogGroupsMatchesCount: 0</li>
</ul>

<b>Example 2: get event ids with event###</b>						
<ul>
<li>pattern = "event:\d{3}";</li>
<li>log = "The first line with event:1234" + "\r\n" + "Line without event" + "\r\n"
                + "And one line with event:456 and event:555 in the middle";</li>
</ul>                

==> Result:
<ul>
<li>js7CheckLogMatches: event:123|event:456|event:555</li>
<li>js7CheckLogMatchedGroups:</li>
<li>js7CheckLogMatchCount: 3</li>
<li>js7CheckLogGroupCount: 0</li>
<li>js7CheckLogGroupsMatchesCount:0</li>
</ul>

<b>Example 3: Get all dates</b>						
<ul>
<li>pattern = "\d{1,2}.\d{1,2}.\d{4}";</li>
<li>log = "1.2.2002: erste Zeile" + "\r\n" +  "04.0.1888: Zweite Zeile"  + "\r\n" +  "22.11.2001: Dritte Zeile";</li>
</ul>
 
==> Result:
<ul>
<li>js7CheckLogMatchedGroups:</li>
<li>js7CheckLogMatches: 1.1.2021|22.05.1996|1.04.1888</li>
<li>js7CheckLogMatchedGroups:</li>
<li>js7CheckLogMatchCount: 3</li>
<li>js7CheckLogGroupCount: 0</li>
<li>js7CheckLogGroupsMatchesCount:0</li>
</ul>

<b>Example 4:</b>
<ul>
<li>pattern = "(\d{1,2}.\d{1,2}.\d{4}).(.*)$";</li>
<li>log = "1.2.2002: erste Zeile" + "\r\n" +  "04.0.1888: Zweite Zeile"  + "\r\n" +  "22.11.2001: Dritte Zeile";</li>
</ul> 
==> Result:
<ul>
<li>js7CheckLogMatches: 1.2.2002: erste Zeile|04.0.1888: Zweite Zeile|22.11.2001: Dritte Zeile</li>
<li>js7CheckLogMatchedGroups: 1.2.2002|04.0.1888|22.11.2001</li>
<li>js7CheckLogMatchCount: 3</li>
<li>js7CheckLogGroupCount: 0</li>
<li>js7CheckLogGroupsMatchesCount:6</li>
</ul>

  					</p>
                </note>
            </param>
            <param name="separator"
                   required="false">
                <note>
                    <title>To separate the matched values</title>
                    <p>
                        Executing the regular expression on the log can result in several matches. The matches are returned in the variable js7CheckLogMatches or js7CheckLogMatchedGroups  
                        and separated from each other with ‘separator’.                    
                    </p>
                </note>
            </param>
            <param name="multiline"
                   required="false">
                <note>
                    <title>Handling the log as one or multiple lines</title>
                    <p>
Enables multiline mode. 
In multiline mode the expressions ^ and $ matchjust after or just before, respectively, a line terminator or the end of the input sequence. 
By default these expressions only match at the beginning and the end of the entire input sequence. 
Multiline mode can also be enabled via the embedded flagexpression (?m). 
              
</p>
                </note>
            </param>
            <param name="case_insensitive"
                   required="false">
                <note>
                    <title>Handling of upper/lowercase</title>
                    <p>
Enables case-insensitive matching. By default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched. Unicode-aware case-insensitive matching can be enabled by specifying the UNICODE_CASE flag in conjunction with this flag. 
Case-insensitive matching can also be enabled via the embedded flag expression (?i). 
Specifying this flag may impose a slight performance penalty.                    
</p>
                </note>
            </param>
            <param name="unix_lines"
                   required="false">
                <note>
                    <title>Handling of line mode</title>
                    <p>
This flag enables Unix lines mode. In the Unix lines mode, 
only '\n' is used as a line terminator and ‘\r’ is treated as a literal character.                    </p>
                </note>
            </param>
        </params>
        
        <params id="return_parameter">
            <param name="js7CheckLogMatchedGroups"
                   required="false">
                <note>
                    <title>Matching groups separated by the separator sign</title>
                    <p>
A string value holding the matching groups of the task log.
An empty value is returned if the pattern doesn't not match
In case of a pattern specifying capturing groups, the matching characters are provided for each group. 
The return variable holds values per group separated by the character specified from the separator argument.                     

</p>
                </note>
            </param>
            <param name="js7CheckLogMatches"
                   required="false">
                <note>
                    <title>Matches separated by the separator sign</title>
                    <p>
A string value holding the matching characters of the task log.
An empty value is returned if the pattern doesn't not match
The return variable holds values per match separated by the character specified from the separator argument.                     
                    </p>
                </note>
            </param>
            <param name="js7CheckLogMatchCount"
                   required="false">
                <note>
                    <title>Count of matches</title>
                    <p>
The count of matches
                    </p>
                </note>
            </param>
            <param name="js7CheckLogGroupsMatchesCount"
                   required="false">
                <note>
                    <title>Count of groups</title>
                    <p>
The count of matched groups. Depends on value for the parameter "multiline". 
multiline=false -- matched groups when the log is regarded as one line.
multiline=true -- Sum of matched groups for each line. 
                    </p>
                </note>
            </param>
            <param name="js7CheckLogGroupCount"
                   required="false">
                <note>
                    <title>Count of matches</title>
                    <p>
The number of groups in the pattern.
                    </p>
                </note>
            </param>
            
        </params>
    </configuration>
    <documentation>
        <note>
            <title>What is the purpose of this job?</title>
            <p>
<ul>
	<li>Users would like to analyze log output of previously executed jobs.</li>
	<li>Analysis includes to identify warnings and errors.</li>
	<li>Analysis includes to identify output for decision-making about next steps in a workflow.</li>
</ul>            
</p>
        </note>
         
    </documentation>
</description>
