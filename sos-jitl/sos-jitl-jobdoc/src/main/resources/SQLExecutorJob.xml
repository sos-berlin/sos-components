<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="js7_job_documentation_v1.1.xsl"?>
<description 
	xmlns="http://www.sos-berlin.com/schema/js7_job_documentation_v1.1" 
	xmlns:xhtml="http://www.w3.org/1999/xhtml" 
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.sos-berlin.com/schema/js7_job_documentation_v1.1 http://www.sos-berlin.com/schema/js7_job_documentation_v1.1.xsd">
	<job	name  = "SQLExecutorJob"
      		title = "Launch Database Statement">
		<script language="java" java_class="com.sos.jitl.jobs.db.SQLExecutorJob" resource="1"></script>
	</job>

	<configuration>
		<params id="job_parameter">
    		<xi:include href="./includes/common/params/param_hibernate_configuration_file.xml" parse="xml" />
      		
      		<param name="command" required="true" DataType="java.lang.String">
        		<note>
          			<p>
            		Database Commands for the Job. It is possible to define more than one instruction in the COMMAND field.
            		Such instructions  are then carried out in the order in which they are written
            		and must be separated by a semicolon and a subsequent new line.
            		Parameters can be replaced in database commands. This is done by the addition of a variable in the form §{param}
            		at any given point in a command. This variable is then given the value of the
            		instruction parameter with the name [param] before execution.
          			</p>
        		</note>
      		</param>
      		
      		<param name="resultset_as_warning" required="false" default_value="false" DataType="java.lang.Boolean">
        		<note>
          			<p>If set to true, a warning will be issued, if the statements produce a result.</p>
        		</note>
      		</param>
      		
      		<param name="exec_returns_resultset" required="false" default_value="false" DataType="java.lang.Boolean">
        		<note>
          			<p>
            			If stored procedures are called which return a result set, 
            			this needs to be set to true in order to run the stored procedure as a query.
            			This does not work with the SQL Server 2000 and 2005 jdbc drivers.
          			</p>
        		</note>
      		</param>
      		
      		<param name="resultset_as_variables" required="false" default_value="" DataType="java.lang.String" valuelist="'column_value','name_value','export_csv'">
        		<note>
          		<div xmlns="http://www.w3.org/1999/xhtml">
            	<strong>empty</strong><br/>
            	No output parameters are generated.<br/><br/>
            	<strong>'column_value'</strong><br/>
            	If set to 'column_value', the first row of the resultset will be set as order parameters
            	(using the column names as parameter names). Example:<br/>
            	The query "SELECT first_name, last_name, age FROM persons" produces the following result set:<br/>
            	<table class="explanation">
              	<tr>
                  	<th>first_name</th>
                  	<th>last_name</th>
                  	<th>age</th>
              	</tr>
              	<tr>
                	<td>John</td>
                	<td>Doe</td>
                	<td>30</td>
              	</tr>
              	<tr>
                	<td>Hans</td>
                	<td>Mustermann</td>
                	<td>33</td>
              	</tr>
              	<tr>
                	<td>Jean</td>
                	<td>Dupont</td>
                	<td>56</td>
              	</tr>
            	</table>
            	The following name/value pairs will be generated as order parameters:<br/>
            	<code>
               		first_name=John<br/>
               		last_name=Doe<br/>
               		age=30<br/>
            	</code>
            	<br/><br/>
            	<strong>'name_value'</strong><br/>
            	If set to 'name_value', the first two columns of the resultset will be turned into order parameters.
            	The values of the first column will become parameter names, the values of the second column will become
            	parameter values. Example:<br/>
            	From the above resultset, the following name/value pairs will be generated as order parameters:<br/>
            	<code>
               		John=Doe<br/>
               		Hans=Mustermann<br/>
               		Jean=Dupont<br/>
            	</code>
            	<br/><br/>
            	<strong>'export_csv'</strong><br/>
            	If set to 'export_csv', the column names and all columns of the resultset will be written to the 'output_file' file.
            	<code>
               		"FIRST_NAME","LAST_NAME","AGE"<br/>
               		"John","Doe","30"<br/>
               		"Hans","Mustermann","33"<br/>
            	</code>
          		</div>
        		</note>
			</param>
			<param name="output_file" required="false" default_value="false" DataType="java.nio.file.Path">
        		<note>
          			<p>
            			The name of a output file.<br />
            			Required by <strong>'resultset_as_variables'</strong>=<strong>'export_csv'</strong>;
          			</p>
        		</note>
      		</param>
		</params>
	</configuration>

	<documentation>
   		<div xmlns="http://www.w3.org/1999/xhtml">
    	This job executes statements in a database. These can be database procedures or SQL statements.
   		</div>
  	</documentation>
</description>
