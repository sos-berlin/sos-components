<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="js7_job_documentation_v1.1.xsl"?>
<description 
	xmlns="http://www.sos-berlin.com/schema/js7_job_documentation_v1.1" 
	xmlns:xhtml="http://www.w3.org/1999/xhtml" 
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.sos-berlin.com/schema/js7_job_documentation_v1.1 http://www.sos-berlin.com/schema/js7_job_documentation_v1.1.xsd">
	<job	name  = "SQLExecutorJob"
      		title = "Launch Database Statement"
       		tasks = "unbounded">
		<script language="java" java_class="com.sos.jitl.jobs.db.SQLExecutorJob" resource="1"></script>
	</job>

	<releases>
		<release id="1.0" created="2021-04-23" modified="2021-04-23">
      		<title>Version 1.0</title>
      		<note language="de"><div xmlns="http://www.w3.org/1999/xhtml">Initiale Auslieferung</div></note>
      		<note language="en"><div xmlns="http://www.w3.org/1999/xhtml">Initial release</div></note>
    	</release>
	</releases>

	<resources>
		<xi:include href="./includes/jars/sos/com.sos.commons.exception.jar.xml" parse="xml" />
    	<xi:include href="./includes/jars/sos/com.sos.commons.hibernate.jar.xml" parse="xml" />
    	<xi:include href="./includes/jars/sos/com.sos.commons.util.jar.xml" parse="xml" />
   </resources>

    
	<configuration>
		<params id="job_parameter">
    		<xi:include href="./includes/common/params/param_hibernate_configuration_file.xml" parse="xml" />
      		
      		<param name="command" required="true" DataType="java.lang.String">
        		<note language="de">
          		<div xmlns="http://www.w3.org/1999/xhtml">
            	Das auszuführende Datenbankkommando.
            	Es ist möglich, im Feld COMMAND mehrere Kommandos anzugeben, die der Reihe nach ausgeführt
            	werden. Diese müssen durch ein Semikolon und einen darauf folgenden Zeilenwechsel (Newline) getrennt sein.
            	Die Datenbank-Kommandos können parameterisiert werden. Dazu ist an beliebiger
            	Stelle im Kommando eine Variable in der Form §{param} einzufügen.
            	Diese wird dann vor der Ausführung durch den Wert des Auftragsparameters
            	mit dem Namen [param] ersetzt.
          		</div>
        		</note>
        	
        		<note language="en">
          		<div xmlns="http://www.w3.org/1999/xhtml">
            	Database Commands for the Job. It is possible to define more than one instruction in the COMMAND field.
            	Such instructions  are then carried out in the order in which they are written
            	and must be separated by a semicolon and a subsequent new line.
            	Parameters can be replaced in database commands. This is done by the addition of a variable in the form §{param}
            	at any given point in a command. This variable is then given the value of the
            	instruction parameter with the name [param] before execution.
          		</div>
        		</note>
      		</param>
      		
      		<param name="resultset_as_warning" required="false" default_value="false" DataType="java.lang.Boolean">
        		<note language="de">
          		<div xmlns="http://www.w3.org/1999/xhtml">
            	Bei true, wird ein Result nach den Statements als Warnung ausgegeben
          		</div>
        		</note>
        		
        		<note language="en">
          		<div xmlns="http://www.w3.org/1999/xhtml">
            	If set to true, a warning will be issued, if the statements produce a result
          		</div>
        		</note>
      		</param>
      		
      		<param name="exec_returns_resultset" required="false" default_value="false" DataType="java.lang.Boolean">
        		<note language="de">
          		<div xmlns="http://www.w3.org/1999/xhtml">
            	Wenn stored procedures, die ein Resultset zurückliefern, ausgeführt werden sollen, muss dieser parameter auf true gesetzt werden, damit die stored procedure als query ausgeführt wird.
            	Dies funktioniert nicht mit dem SQL Server 2000 und 2005 jdbc Treiber.
          		</div>
        		</note>
        		
        		<note language="en">
          		<div xmlns="http://www.w3.org/1999/xhtml">
            	If stored procedures are called which return a result set, this needs to be set to true in order to run the stored procedure as a query.
            	This does not work with the SQL Server 2000 and 2005 jdbc drivers.
          		</div>
        		</note>
      		</param>
      		
      		<param name="resultset_as_variables" required="false" default_value="" DataType="java.lang.String" valuelist="'column_value','name_value'">
        		<note language="de">
          		<div xmlns="http://www.w3.org/1999/xhtml">
            	<strong>leer</strong><br/>
            	Es werden keine Parameter generiert.<br/><br/>
            	<strong>'column_value'</strong><br/>
            	Bei 'column_value' werden aus der ersten Zeile des Result Set Auftragsparameter generiert.
            	Die Parameternamen sind die Spaltennamen.

            	Beispiel:<br/>
            	"SELECT first_name, last_name, age FROM persons" liefert die folgende Ergebnismenge<br/>
            	<table>
              	<tr>
                	<th>first_name</th>
                  	<th>last_name</th>
                  	<th>age</th>
              	</tr>
              	<tr>
                	<td>John</td>
                	<td>Doe</td>
                	<td>30</td>
              	</tr>
              	<tr>
                	<td>Hans</td>
                	<td>Mustermann</td>
                	<td>33</td>
              	</tr>
              	<tr>
                	<td>Jean</td>
                	<td>Dupont</td>
                	<td>56</td>
              	</tr>
            	</table>
            	Daraus werden als Auftragsparameter die folgenden Name/Wert Paare generiert:<br/>
            	<code>
               		first_name=John<br/>
               		last_name=Doe<br/>
               		age=30<br/>
            	</code>
            	<br/><br/>
            	<strong>'name_value'</strong><br/>
            	Bei 'name_value' werden aus den ersten beiden Spalten Zeile des Result Set Auftragsparameter generiert.
            	Die Parameternamen sind die Werte der ersten Spalte, die Parameterwerte sind die Werte der zweiten Spalte. Beispiel:<br/>
            	Aus der oben angegebenen Ergebnismenge werden als Auftragsparameter die folgenden Name/Wert Paare generiert:<br/>
            	<code>
               		John=Doe<br/>
               		Hans=Mustermann<br/>
               		Jean=Dupont<br/>
            	</code>
          		</div>
        		</note>
        	
        		<note language="en">
          		<div xmlns="http://www.w3.org/1999/xhtml">
            	<strong>empty</strong><br/>
            	No output parameters are generated.<br/><br/>
            	<strong>'column_value'</strong><br/>
            	If set to 'column_value', the first row of the resultset will be set as order parameters
            	(using the column names as parameter names). Example:<br/>
            	The query "SELECT first_name, last_name, age FROM persons" produces the following result set:<br/>
            	<table>
              	<tr>
                  	<th>first_name</th>
                  	<th>last_name</th>
                  	<th>age</th>
              	</tr>
              	<tr>
                	<td>John</td>
                	<td>Doe</td>
                	<td>30</td>
              	</tr>
              	<tr>
                	<td>Hans</td>
                	<td>Mustermann</td>
                	<td>33</td>
              	</tr>
              	<tr>
                	<td>Jean</td>
                	<td>Dupont</td>
                	<td>56</td>
              	</tr>
            	</table>
            	The following name/value pairs will be generated as order parameters:<br/>
            	<code>
               		first_name=John<br/>
               		last_name=Doe<br/>
               		age=30<br/>
            	</code>
            	<br/><br/>
            	<strong>'name_value'</strong><br/>
            	If set to 'name_value', the first two columns of the resultset will be turned into order parameters.
            	The values of the first column will become parameter names, the values of the second column will become
            	parameter values. Example:<br/>
            	From the above resultset, the following name/value pairs will be generated as order parameters:<br/>
            	<code>
               		John=Doe<br/>
               		Hans=Mustermann<br/>
               		Jean=Dupont<br/>
            	</code>
          		</div>
        		</note>
			</param>
		</params>
	</configuration>

	<documentation language="de">
		<div xmlns="http://www.w3.org/1999/xhtml">
    	Dieser Job ermöglicht es, Statements in Datenbanken auszuführen. Dies können Datenbankprozeduraufrufe und SQL-Befehle sein.
    	</div>
	</documentation>
	<documentation language="en">
   		<div xmlns="http://www.w3.org/1999/xhtml">
    	This job executes statements in a database. These can be database procedures or SQL statements.
   		</div>
  	</documentation>
</description>
